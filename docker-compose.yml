services:
  db:
    image: postgres:15
    container_name: timesink-db
    restart: always
    environment:
      POSTGRES_USER: timesink
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: timesink
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timesink"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: timesink-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      - DATABASE_URL=postgresql://timesink:${DB_PASSWORD}@db:5432/timesink
    networks:
      - app_net
    restart: always

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: timesink-frontend
    depends_on:
      - backend
    networks:
      - app_net
    restart: always

  nginx:
    image: nginx:alpine
    container_name: timesink-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_net
    restart: always

volumes:
  db_data:

networks:
  app_net:
    driver: bridge
